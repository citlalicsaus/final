{"version":3,"sources":["../src/backup.index.js"],"names":["onSuccess","response","data","onDataExtracted","onBeers","beers","beerIt","beer","id","name","nameDisplay","abv","isOrganic","isRetired","status","statusDisplay","modelBeer","Beer","save","err","savedBeer","console","log","forEach","onError","error","END_POINT","BEERS","numberOfPages","currentPage","getNextBeers","url","axios","get","then","catch"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEA;;AAEA,MAAMA,SAAS,GAAG,UAAUC,QAAV,EAAoB;AACpC,SAAOA,QAAQ,CAACC,IAAhB;AACD,CAFD;;AAIA,MAAMC,eAAe,GAAG,UAAUD,IAAV,EAAgB;AACtC,SAAOA,IAAI,CAACA,IAAZ;AACD,CAFD;;AAIA,MAAME,OAAO,GAAG,UAAUC,KAAV,EAAiB;AAC/B,QAAMC,MAAM,GAAIC,IAAD,IAAU;AACvB,UAAM;AACJC,MAAAA,EADI;AACAC,MAAAA,IADA;AACMC,MAAAA,WADN;AACmBC,MAAAA,GADnB;AACwBC,MAAAA,SADxB;AACmCC,MAAAA,SADnC;AAC8CC,MAAAA,MAD9C;AACsDC,MAAAA;AADtD,QAEFR,IAFJ;AAIA,UAAMS,SAAS,GAAG,IAAIC,aAAJ,CAAS;AACzBT,MAAAA,EADyB;AAEzBC,MAAAA,IAFyB;AAGzBC,MAAAA,WAHyB;AAIzBC,MAAAA,GAJyB;AAKzBC,MAAAA,SALyB;AAMzBC,MAAAA,SANyB;AAOzBC,MAAAA,MAPyB;AAQzBC,MAAAA;AARyB,KAAT,CAAlB;AAWAC,IAAAA,SAAS,CAACE,IAAV,CAAe,CAACC,GAAD,EAAMC,SAAN,KAAoB;AACjC,UAAID,GAAJ,EAAS,OAAOE,OAAO,CAACC,GAAR,CAAYH,GAAZ,CAAP,CADwB,CAEjC;AACD,KAHD;AAIA,WAAO,IAAP;AACD,GArBD;;AAuBAd,EAAAA,KAAK,CAACkB,OAAN,CAAcjB,MAAd;AACD,CAzBD;;AA2BA,MAAMkB,OAAO,GAAG,UAAUC,KAAV,EAAiB;AAC/BJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,CAFD;;AAIA,MAAMC,SAAS,GAAG,uCAAlB;AACA,MAAMC,KAAK,GAAI,GAAED,SAAU,4CAA3B;AACA,MAAME,aAAa,GAAG,EAAtB;AACA,IAAIC,WAAW,GAAG,CAAlB;;AACA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAMC,GAAG,GAAI,GAAEJ,KAAM,MAAKE,WAAY,EAAtC;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;;AACAC,iBACGC,GADH,CACOF,GADP,EAEGG,IAFH,CAEQlC,SAFR,EAGGkC,IAHH,CAGQ/B,eAHR,EAIG+B,IAJH,CAIQ9B,OAJR,EAKG8B,IALH,CAKQ,MAAM;AACVL,IAAAA,WAAW,IAAI,CAAf;;AACA,QAAIA,WAAW,IAAID,aAAnB,EAAkC;AAChCE,MAAAA,YAAY;AACb;AACF,GAVH,EAWGK,KAXH,CAWSX,OAXT;AAYD,CAfD;;AAgBAM,YAAY","sourcesContent":["import axios from 'axios';\nimport dbConnect from './config';\nimport Beer from './models/beer';\n\ndbConnect();\n\nconst onSuccess = function (response) {\n  return response.data;\n};\n\nconst onDataExtracted = function (data) {\n  return data.data;\n};\n\nconst onBeers = function (beers) {\n  const beerIt = (beer) => {\n    const {\n      id, name, nameDisplay, abv, isOrganic, isRetired, status, statusDisplay,\n    } = beer;\n\n    const modelBeer = new Beer({\n      id,\n      name,\n      nameDisplay,\n      abv,\n      isOrganic,\n      isRetired,\n      status,\n      statusDisplay,\n    });\n\n    modelBeer.save((err, savedBeer) => {\n      if (err) return console.log(err);\n      // console.log(savedBeer);\n    });\n    return true;\n  };\n\n  beers.forEach(beerIt);\n};\n\nconst onError = function (error) {\n  console.log(error);\n};\n\nconst END_POINT = 'https://sandbox-api.brewerydb.com/v2/';\nconst BEERS = `${END_POINT}beers?key=fc4b69536c1dce367b1cf0194c7de532`;\nconst numberOfPages = 23;\nlet currentPage = 1;\nconst getNextBeers = () => {\n  const url = `${BEERS}&p=${currentPage}`;\n  console.log(url);\n  axios\n    .get(url)\n    .then(onSuccess)\n    .then(onDataExtracted)\n    .then(onBeers)\n    .then(() => {\n      currentPage += 1;\n      if (currentPage <= numberOfPages) {\n        getNextBeers();\n      }\n    })\n    .catch(onError);\n};\ngetNextBeers();\n"],"file":"backup.index.js"}