{"version":3,"sources":["../../src/controllers/User.js"],"names":["onGetList","req","res","onUsersFound","users","json","message","data","User","find","populate","then","catch","onGetEntity","id","params","onUserFound","user","findOne","_id","onCreateEntity","name","email","password","body","onSaltHash","hash","newUser","beersTaken","onSaveUser","userSaved","save","bcrypt","SALTINESS","onUpdateEntity","onUserSaved","onDeleteEntity","onUserDeleted","deleteOne","onDrankBeer","status","beerID","onBeerFound","beerFound","push","Beer","onLogin","onCompare","isEqual","token","jwt","sign","SECRET","expiresIn","auth","compare","app","get","post","put","delete"],"mappings":"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","sourcesContent":["import jwt from 'jsonwebtoken';\nimport bcrypt from 'bcrypt';\nimport User from '../models/user';\nimport Beer from '../models/beer';\nimport { SECRET, SALTINESS } from '../config';\nimport onPromiseError from './utils';\n\nconst onGetList = (req, res) => {\n  const onUsersFound = (users) => {\n    res.json({\n      message: 'se ha realizado con exito',\n      data: users,\n    });\n  };\n  User.find({})\n    .populate('beersTaken')\n    .then(onUsersFound)\n    .catch(onPromiseError(res));\n};\n\nconst onGetEntity = (req, res) => {\n  const { id } = req.params;\n  const onUserFound = (user) => {\n    res.json({\n      message: 'se ha realizado con exito',\n      data: user,\n    });\n  };\n\n  User.findOne({ _id: id })\n    .populate('beersTaken')\n    .then(onUserFound)\n    .catch(onPromiseError(res));\n};\n\nconst onCreateEntity = (req, res) => {\n  const { name, email, password } = req.body;\n  const onSaltHash = (hash) => {\n    const newUser = new User({\n      name,\n      email,\n      password: hash,\n      beersTaken: [],\n    });\n    const onSaveUser = (userSaved) => {\n      res.json({\n        message: 'Usuario creado con exito',\n        data: userSaved,\n      });\n    };\n    newUser\n      .save()\n      .then(onSaveUser)\n      .catch(onPromiseError(res));\n  };\n  bcrypt\n    .hash(password, SALTINESS)\n    .then(onSaltHash)\n    .catch(onPromiseError(res));\n};\n\nconst onUpdateEntity = (req, res) => {\n  const { id } = req.params;\n  const { name, email, password } = req.body;\n  const onUserFound = (user) => {\n    user.name = name;\n    user.email = email;\n    user.password = password;\n    const onUserSaved = (userSaved) => {\n      res.json({\n        message: 'Usuario Actualizado',\n        data: userSaved,\n      });\n    };\n    user\n      .save()\n      .then(onUserSaved)\n      .catch(onPromiseError(res));\n  };\n  User.findOne({ _id: id })\n    .then(onUserFound)\n    .catch(onPromiseError(res));\n};\n\nconst onDeleteEntity = (req, res) => {\n  const { id } = req.params;\n  const onUserDeleted = () => {\n    res.json({ message: 'Usuario borrado correctamente' });\n  };\n  User.deleteOne({ _id: id })\n    .then(onUserDeleted)\n    .catch(onPromiseError(res));\n};\n\nconst onDrankBeer = (req, res) => {\n  if (!req.user) {\n    res.status(400).json({\n      message: 'Permiso denegado',\n    });\n    return;\n  }\n  const { beerID } = req.params;\n  const onBeerFound = (beerFound) => {\n    if (!beerFound) {\n      res.status(404).json({ message: 'cheve no enctrada' });\n    }\n    req.user.beersTaken.push(beerFound._id);\n    const onUserSaved = () => {\n      res.json({\n        message: 'User drank a beer successfully',\n      });\n    };\n    req.user\n      .save()\n      .then(onUserSaved)\n      .catch(onPromiseError(res));\n  };\n  Beer.findOne({ _id: beerID })\n    .then(onBeerFound)\n    .catch(onPromiseError(res));\n};\n\nconst onLogin = (req, res) => {\n  const { email, password } = req.body;\n  const onUserFound = (user) => {\n    if (!user) {\n      return res.status(404).json({\n        message: 'Usuario no encontrado',\n      });\n    }\n    const onCompare = (isEqual) => {\n      if (!isEqual) {\n        res.status(300).json({ message: 'wrong password' });\n      }\n      const token = jwt.sign(\n        {\n          id: user._id,\n        },\n        SECRET,\n        { expiresIn: 240 },\n      );\n      res.json({ auth: true, token });\n    };\n\n    bcrypt\n      .compare(password, user.password)\n      .then(onCompare)\n      .catch(onPromiseError(res));\n  };\n\n  User.findOne({ email })\n    .then(onUserFound)\n    .catch(onPromiseError(res));\n};\n\nexport default (app) => {\n  app.get('/user', onGetList);\n  app.get('/user/:id', onGetEntity);\n  app.post('/user', onCreateEntity);\n  app.post('/user/login', onLogin);\n  app.put('/user/:id', onUpdateEntity);\n  app.put('/user/drank/:beerID', onDrankBeer);\n  app.delete('/user/:id', onDeleteEntity);\n};\n"],"file":"User.js"}